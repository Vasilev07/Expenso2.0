name: Integration (Automatic)

on: [ push ]

jobs:
  editorconfig-check:
    name: .editorconfig lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: editorconfig-checker/action-editorconfig-checker@v1
  markdown-lint:
    name: markdown lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npx markdownlint-cli **/*.md
  lint-be:
    needs: [ editorconfig-check, markdown-lint ]
    name: BE lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: echo ${GITHUB_WORKSPACE}
      - run: npm install
        working-directory: ./BE
      - run: npm run lint
        working-directory: ./BE
#  test-be:
#    needs: [ lint-be ]
#    name: BE tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v2
#      - name: Setup Nodejs 16
#        uses: actions/setup-node@v3
#        with:
#          node-version: '16.13'
#      - name: Setup MongoDb
#        uses: supercharge/mongodb-github-action@1.8.0
#      - run: npm install
#        working-directory: ./BE
#      - run: npm run test
#        working-directory: ./BE
  lint-fe:
    needs: [ editorconfig-check, markdown-lint ]
    name: FE lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: echo ${GITHUB_WORKSPACE}
      - run: npm install --force
        working-directory: ./FE/expenso2.0
      - run: npm run lint
        working-directory: ./FE/expenso2.0
#  test-fe:
#    needs: [ lint-fe ]
#    name: FE tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v3
#        with:
#          node-version: '16'
#      - run: echo ${GITHUB_WORKSPACE}
#      - run: npm install --force
#        working-directory: ./FE/expenso2.0
#      - run: npm run test
#        working-directory: ./FE/expenso2.0
  build-be:
#    needs: [ test-fe, test-be ]
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: expenso
          IMAGE_TAG: expenso
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  s3-push:
#    needs: [ test-fe, test-be ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - run: echo ${GITHUB_WORKSPACE}
      - run: npm install --force
        working-directory: ./FE/expenso2.0
      - run: npm run build
        working-directory: ./FE/expenso2.0
      - name: Zip artifact for deployment
      - run: zip -r Archive.zip ./FE/expenso2.0/www/
      - run: cd ./FE/expenso2.0 && ls -la
      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'Archive.zip'
          destination_dir: 'latest'
